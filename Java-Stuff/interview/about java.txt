1) why use Java?
Ans)   a) Java is simple: the syntax is similar to c++,so java is easy to learn for c++ programmers .Java does not contain complicated features like explicit pointers , operator overloading 
			as they may create few bugs (like memory leaks due to unreferenced locations ).we need not waste our time in removing unreferenced objects as Automatic Garbage collection does that job.
	   b) Java is platform independent : (A platform is the hardware or software environment in which a program runs) . Java is platform independent bacause once we compile the java
	       programs,we can run the byte code on any platform that have jvm installed.(jvm takes care of converting byte code to native code.so jvm is platform specific)(c is not platform as 
		   after compiling,native code is generated which is specific to the O.S and other O.S may not understand it).thus we need not compile the code for every platform. (c and c++ can also
		   be platform independent by using multi platform libraries like QT or boost).
	   if asked: java is secure: java is secure due to access modifiers like public,protected private and default.if we dont want the data members to be accesed out of class,we can use private.
	   also,we have security manager that prevents the java programs to cause any loss to system they are running on.
	   c) Object oriented: the software are developed to solve problems of real world , and by using object oriented programming,we can design the classes and objects that resembles real world.
	      oop in java has many powerful features like inheritance,polymorphism,abstraction ,encapsulation .
	   d) supports web based technologies such as Servlets and jsp ,supports distributed applications such as sockets ,Rmi and ejb
	   e) memory management : Automatic garbage collection , the absence of pointers to avoid memory problems and many more.
	   
2) why oops?
ans) a) oops is a methodology to design program using classes and objects.oops provide us important features like inheritance,polymorphism,Abstraction and Encapsulation.   
     b) by using oops,we get the benefit of making the code modular,reusable and extensible which leads to faster development and better quality of softwares.
	    
		(
		  modular : oop is modular which means that each class or a method must have a simple and specific functionality for efficient implementation.
		  reusable: most of the times,we reuse the code by using the available api's.for eg. we make a class for validation of username and password,and we can use it in the softwares where we need such validation.
		  extensible: if we want more functionalty in a class,we can add data members and methods to it.
		  faster development: due to code reusability.
		  quality: oop helps us to minimize the number of flaws in a code by using standard api's,encapsulation .
		)
3) difference between java and c++ :
ans) C++ was designed for systems and appliction programming,extending the c langugage.
     Java was initially designed as an interpreter for printing systems.Java was dependent on a virtual machine to be portable which made it platform independent
     but c++ was platform dependent as the native code(machine level) generated after compilation is specific to that particular O.S.		 
	 
	 unlike c++,java doesnot support pointers.infact,java supports references which acts like restricted pointers.we can refer to actual address,but we cannot do any arithmetic operations
	 on references as we can do in the case pointers.(pointers can create many problems )
	 
	 c++ supports multiple inheritance,but java doesn't as it may cause problems.(if a class inherits two classes that have methods with same name,compilation error is thrown.)
	 
	 unlike c++,java doesnot supports destructors that job is done by AGC-automatic garbage collection.(AGC calls finalize method to release system resources such as open files or open sockets.)
	 
	 c++ supports operator overloading,but java doesnot.
	 
	 c++ uses only compiler,but java uses both comiler and interpreter.javac is java compiler which converts the java code to byte code that is platform independent . JVM has the interpreter which converts the byte code into 
	 executable native code.c++ compiler directly converts source code to native executable code.

4) What are the usages of Java packages?
ans) It helps solve naming conflicts when different packages have classes with the same names. This also helps you
organize files within your project. For example: java.io package do something related to I/O and java.net
package do something to do with network and so on.

5) static and dynamic class  loading.
ans) we can load a class statically by using new operator. if that class is not found at runtime,NoClassDefFoundException is thrown. In dynamic classloading,the class information can be 
     provided at runtime by invoking the methods of class class.eg: we can load a class by passing its name as string into class.forName(). here we can provide the name of class at runtime.
	 then we can create the object of that class by class,newInstance(). if that class is not found,classnotFounException is thrown.

6) static blocks / static initialized	 
ans) they dont have any name and they are executed before constructors are executed.they are used to initialized static fields.

7)difference between constructors and regular methods.
ans) Constructors must have the same name as the class name and cannot return a value. The constructors are called only once per creation of an object while regular methods 
 can be called many times. Regular methods can have any name and can have any return type.
 
8) calling constructors:
   to call same class const, use this() and for parent class use super().
   to call super class method,use super.foo().

9) s   
     
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
		
